name: ci

on:
  pull_request:
    branches: [ "main" ]
  push:
    branches: [ "main" ]
  workflow_dispatch: {}

permissions:
  contents: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # REQUIRED 1/2
  file-facts:
    name: file-facts
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Report file facts
        run: |
          set -euo pipefail
          f="app_admin.py"
          test -f "$f" || { echo "::warning::$f missing"; exit 0; }
          sha256sum "$f" | awk '{print "sha256:", $1}'
          wc -l "$f" | awk '{print "lines :", $1}'

  # REQUIRED 2/2
  hcr-drift:
    name: hcr-drift
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (full history for diff)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Compute base/head
        id: revs
        run: |
          set -euo pipefail
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "base=${{ github.event.pull_request.base.sha }}" >> $GITHUB_OUTPUT
          else
            # on push to main, compare to previous commit
            echo "base=$(git rev-parse HEAD^)" >> $GITHUB_OUTPUT
          fi
          echo "head=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
      - name: Enforce APP_VER bump if app_admin.py changed
        run: |
          set -euo pipefail
          base="${{ steps.revs.outputs.base }}"
          head="${{ steps.revs.outputs.head }}"

          changed=$(git diff --name-only "$base" "$head" | grep -c '^app_admin.py$' || true)
          if [ "$changed" -eq 0 ]; then
            echo "app_admin.py unchanged -> OK"
            exit 0
          fi

          base_ver=$(git show "${base}:app_admin.py" | grep -E '^APP_VER\s*=' | head -n1 | sed -E 's/.*"([^"]+)".*/\1/')
          head_ver=$(git show "${head}:app_admin.py" | grep -E '^APP_VER\s*=' | head -n1 | sed -E 's/.*"([^"]+)".*/\1/')

          echo "Base APP_VER: $base_ver"
          echo "Head APP_VER: $head_ver"

          if [ -z "$base_ver" ] || [ -z "$head_ver" ]; then
            echo "::error ::APP_VER line not found in one of the revisions."
            exit 1
          fi

          if [ "$base_ver" = "$head_ver" ]; then
            echo "::error ::app_admin.py changed but APP_VER was not bumped (HCR drift rule)."
            exit 1
          fi

          echo "APP_VER bumped -> OK"

  # OPTIONAL (not required by ruleset)
  lint-and-guards:
    name: lint-and-guards
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install Ruff
        run: |
          python -m pip install --upgrade pip
          pip install "ruff==0.14.2"
      - name: Syntax compile (fast fail)
        run: |
          python -m py_compile app_admin.py || true
      - name: Ruff lint (nonblocking)
        continue-on-error: true
        run: |
          ruff check --output-format=github .
      - name: Ruff format (check only; nonblocking)
        continue-on-error: true
        run: |
          ruff format --check .
- name: File facts (app_admin.py)
  run: |
    set -e
    sha256sum app_admin.py
    wc -l < app_admin.py
